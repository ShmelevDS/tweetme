{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\777\\\\Desktop\\\\tweetme_repo\\\\tweetme-web\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const TweetItems = [{\n      'content': 123\n    }, {\n      'content': 'Hello'\n    }];\n    setTweets(TweetItems);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, tweets.map((tweet, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }\n    }, tweet.content);\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nfunction loadTweets(tweetsElement) {\n  const xhr = new XMLHttpRequest();\n  const method = 'GET';\n  const url = '/tweets';\n  const responseType = 'json';\n  xhr.responseType = responseType;\n  xhr.open(method, url);\n\n  xhr.onload = function () {\n    const serverResponse = xhr.response;\n    let listedItems = serverResponse;\n    let finalTweetStr = '';\n\n    for (let i = 0; i < listedItems.length; i++) {\n      let currentItem = formatTweetElement(listedItems[i]);\n      finalTweetStr += formatTweetElement(listedItems[i]);\n    }\n\n    tweetsElement.innerHTML = finalTweetStr;\n  };\n\n  xhr.send();\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/777/Desktop/tweetme_repo/tweetme-web/src/App.js"],"names":["React","useEffect","useState","App","tweets","setTweets","TweetItems","logo","map","tweet","index","content","loadTweets","tweetsElement","xhr","XMLHttpRequest","method","url","responseType","open","onload","serverResponse","response","listedItems","finalTweetStr","i","length","currentItem","formatTweetElement","innerHTML","send"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,UAAU,GAAG,CAAC;AAAC,iBAAW;AAAZ,KAAD,EAAmB;AAAC,iBAAW;AAAZ,KAAnB,CAAnB;AACAD,IAAAA,SAAS,CAACC,UAAD,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAC1B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,OAAX,CAAP;AACD,GAFA,CADH,CALF,eAUE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CADF,CADF;AAuBD;;AAED,SAASC,UAAT,CAAoBC,aAApB,EAAmC;AACjC,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACA,QAAMC,MAAM,GAAG,KAAf;AACA,QAAMC,GAAG,GAAG,SAAZ;AACA,QAAMC,YAAY,GAAG,MAArB;AAEAJ,EAAAA,GAAG,CAACI,YAAJ,GAAmBA,YAAnB;AACAJ,EAAAA,GAAG,CAACK,IAAJ,CAASH,MAAT,EAAiBC,GAAjB;;AACAH,EAAAA,GAAG,CAACM,MAAJ,GAAa,YAAW;AACtB,UAAMC,cAAc,GAAGP,GAAG,CAACQ,QAA3B;AACA,QAAIC,WAAW,GAAGF,cAAlB;AACA,QAAIG,aAAa,GAAG,EAApB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACF,WAAW,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,WAAW,GAAGC,kBAAkB,CAACL,WAAW,CAACE,CAAD,CAAZ,CAApC;AACAD,MAAAA,aAAa,IAAII,kBAAkB,CAACL,WAAW,CAACE,CAAD,CAAZ,CAAnC;AACD;;AACDZ,IAAAA,aAAa,CAACgB,SAAd,GAA0BL,aAA1B;AACD,GATD;;AAUAV,EAAAA,GAAG,CAACgB,IAAJ;AACD;;AAED,eAAe3B,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [tweets, setTweets] = useState([])\n  useEffect(() => {\n    const TweetItems = [{'content': 123}, {'content': 'Hello'}]\n    setTweets(TweetItems)\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n          {tweets.map((tweet, index)=>{\n            return <li>{tweet.content}</li>\n          })}\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nfunction loadTweets(tweetsElement) {\n  const xhr = new XMLHttpRequest()\n  const method = 'GET'\n  const url = '/tweets'\n  const responseType = 'json'\n\n  xhr.responseType = responseType\n  xhr.open(method, url)\n  xhr.onload = function() {\n    const serverResponse = xhr.response\n    let listedItems = serverResponse\n    let finalTweetStr = ''\n    for (let i=0; i<listedItems.length; i++) {\n      let currentItem = formatTweetElement(listedItems[i])\n      finalTweetStr += formatTweetElement(listedItems[i])\n    }\n    tweetsElement.innerHTML = finalTweetStr\n  }\n  xhr.send()\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}